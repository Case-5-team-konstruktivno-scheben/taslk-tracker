import React, { useState } from "react";

const CategorySelector = ({
  categories,
  selectedCategory,
  setSelectedCategory,
  newCategoryName,
  setNewCategoryName,
  addCategory,
  deleteCategory,
}) => {
  const [isEditing, setIsEditing] = useState(false);

  return (
    <div style={styles.sidebar}>
      <h2 style={styles.title}>Tusk</h2>
      <div style={styles.header}>
        <p style={styles.link}>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</p>
        <button
          onClick={() => setIsEditing(!isEditing)}
          style={styles.editButton}
        >
          üñâ
        </button>
      </div>
      <ul style={styles.categoryList}>
        {/* –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ */}
        <li
          style={{
            ...styles.categoryItem,
            fontWeight: selectedCategory === "all" ? "bold" : "normal",
            cursor: "pointer",
          }}
          onClick={() => setSelectedCategory("all")}
        >
          –í—Å–µ –∑–∞–¥–∞—á–∏
        </li>

        {categories.map((cat) => (
          <li
            key={cat.id}
            style={{
              ...styles.categoryItem,
              fontWeight: selectedCategory === cat.id ? "bold" : "normal",
              cursor: "pointer",
              display: "flex",
              alignItems: "center",
              justifyContent: "space-between",
            }}
            onClick={() => setSelectedCategory(cat.id)}
          >
            <span>{cat.name}</span>
            {isEditing && (
              <button
                onClick={(e) => {
                  e.stopPropagation();
                  deleteCategory(cat.id);
                }}
                style={styles.deleteButton}
              >
                ‚Äì
              </button>
            )}
          </li>
        ))}

        {/* –í–≤–æ–¥ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –∫–Ω–æ–ø–∫–∞ */}
        <li style={{ marginTop: 10, display: "flex", gap: "8px", alignItems: "center" }}>
          <input
            type="text"
            placeholder="–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è"
            value={newCategoryName}
            onChange={(e) => setNewCategoryName(e.target.value)}
            style={styles.newCategoryInput}
            onFocus={(e) => (e.target.style.borderColor = "#4CAF50")}
            onBlur={(e) => (e.target.style.borderColor = "#ccc")}
          />
          <button
            onClick={addCategory}
            style={styles.addButton}
            onMouseOver={(e) => (e.target.style.backgroundColor = "#45a049")}
            onMouseOut={(e) => (e.target.style.backgroundColor = "#4CAF50")}
          >
            +
          </button>
        </li>

        {/* –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ */}
        <li
          style={{
            ...styles.categoryItem,
            fontWeight: selectedCategory === "completed" ? "bold" : "normal",
            cursor: "pointer",
            marginTop: 20,
            borderTop: "1px solid #ccc",
            paddingTop: 10,
          }}
          onClick={() => setSelectedCategory("completed")}
        >
          –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ
        </li>
      </ul>
    </div>
  );
};

const styles = {
  sidebar: {
    width: 220,
    borderRight: "1px solid #ddd",
    padding: 20,
    backgroundColor: "#f8f9fa",  // –õ–µ–≥–∫–∏–π —Ñ–æ–Ω –¥–ª—è –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    borderRadius: "12px",  // –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ —É–≥–ª—ã
    boxShadow: "0 4px 8px rgba(0,0,0,0.1)",  // –¢–µ–Ω—å –¥–ª—è –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
  },
  title: {
    fontSize: 24,
    marginBottom: 16,
    fontWeight: "bold",  // –°–¥–µ–ª–∞–ª –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∂–∏—Ä–Ω—ã–º
  },
  header: {
    display: "flex",
    alignItems: "center",
    marginBottom: 10,
  },
  link: {
    fontWeight: "bold",
    fontSize: 16,
    margin: 0,
    marginRight: 8,
  },
  editButton: {
    background: "none",
    border: "none",
    cursor: "pointer",
    fontSize: 16,
    padding: 4,
    transition: "transform 0.3s ease",  // –ü–ª–∞–≤–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ
    ":hover": {
      transform: "scale(1.1)",  // –õ–µ–≥–∫–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
    },
  },
  categoryList: {
    listStyle: "none",
    padding: 0,
    margin: 0,
  },
  categoryItem: {
    padding: "8px 0",
    fontSize: 16,
    transition: "background-color 0.3s ease",  // –ü–ª–∞–≤–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–æ–Ω–∞
    ":hover": {
      backgroundColor: "#f1f1f1",  // –õ–µ–≥–∫–æ–µ –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ —Ñ–æ–Ω–∞ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
    },
  },
  newCategoryInput: {
    width: "150px",  // –°–¥–µ–ª–∞–ª –ø–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–µ–º–Ω–æ–≥–æ –∫–æ—Ä–æ—á–µ
    padding: "6px 10px",
    border: "1px solid #ccc",
    borderRadius: "30px",  // –ö—Ä—É–≥–ª–∞—è —Ñ–æ—Ä–º–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞
    boxShadow: "inset 0 1px 3px rgba(0,0,0,0.1)",
    outline: "none",
    transition: "border-color 0.3s",  // –ü–ª–∞–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–º–∫–∏
    ":focus": {
      borderColor: "#4CAF50",  // –ó–µ–ª–µ–Ω–∞—è —Ä–∞–º–∫–∞ –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ
    },
  },
  addButton: {
    cursor: "pointer",
    width: "25px",  // –°–¥–µ–ª–∞–ª –∫–Ω–æ–ø–∫—É –º–µ–Ω—å—à–µ–π
    height: "25px",  // –°–¥–µ–ª–∞–ª –∫–Ω–æ–ø–∫—É –∫—Ä—É–≥–ª–æ–π
    borderRadius: "50%",  // –ö—Ä—É–≥–ª–∞—è –∫–Ω–æ–ø–∫–∞
    backgroundColor: "#4CAF50",
    color: "white",
    border: "none",
    fontWeight: "bold",
    fontSize: "18px",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    boxShadow: "0 4px 8px rgba(0, 123, 255, 0.2)",  // –¢–µ–Ω—å –¥–ª—è –∫–Ω–æ–ø–∫–∏
    transition: "background-color 0.3s, transform 0.3s ease",
    ":hover": {
      backgroundColor: "#45a049",  // –ü—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –∫–Ω–æ–ø–∫–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ç–µ–º–Ω–µ–µ
      transform: "scale(1.1)",  // –ö–Ω–æ–ø–∫–∞ –Ω–µ–º–Ω–æ–≥–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è
    },
    ":active": {
      transform: "scale(0.95)",  // –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ–º–Ω–æ–≥–æ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è
    },
  },
  deleteButton: {
    cursor: "pointer",
    width: "20px",
    height: "20px",
    borderRadius: "50%",
    border: "1px solid #f44336",
    backgroundColor: "#fff",
    color: "#f44336",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    fontSize: "14px",
    padding: 0,
    transition: "background-color 0.3s, transform 0.3s ease",
    ":hover": {
      backgroundColor: "#f8d7da",  // –õ–µ–≥–∫–æ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
      transform: "scale(1.1)",  // –õ–µ–≥–∫–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
    },
    ":active": {
      transform: "scale(0.95)",  // –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ–º–Ω–æ–≥–æ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è
    },
  },
};

export default CategorySelector;
